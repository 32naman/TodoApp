{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/src/components/InputTodoShare.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsShare\";\n// const PORT = 8000;\nconst sharePOSTURL = `https://todonaman1.herokuapp.com/sharePOST`;\n\nfunction useNewTodo(props) {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const {\n    state,\n    setTodos\n  } = props;\n  useEffect(() => {\n    if (newTodo !== \"\") {\n      let todosSend = [];\n      setTodos(todos => {\n        todos.push({\n          text: newTodo.trim(),\n          done: false,\n          id: Math.random()\n        });\n        todosSend = todos;\n        return [...todos];\n      });\n      netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n    }\n  }, [newTodo, setTodos, state.hash]);\n  return setNewTodo;\n}\n\nfunction InputTodo(props) {\n  const setNewTodo = useNewTodo(props);\n  const inputNewTodo = useRef(null);\n\n  function addTodo() {\n    const text = inputNewTodo.current.value;\n    setNewTodo(text);\n    inputNewTodo.current.value = \"\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputToDo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"input\",\n    ref: inputNewTodo,\n    placeholder: \"Enter a To-Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus-square\",\n    onClick: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default InputTodo;","map":{"version":3,"sources":["/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/src/components/InputTodoShare.tsx"],"names":["React","useState","useEffect","useRef","netCalls","sharePOSTURL","useNewTodo","props","newTodo","setNewTodo","state","setTodos","todosSend","todos","push","text","trim","done","id","Math","random","putJSON","hash","InputTodo","inputNewTodo","addTodo","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA;AACA,MAAMC,YAAY,GAAI,4CAAtB;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAAkC;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,KAA5B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAO,KAAK,EAAhB,EAAoB;AAClB,UAAII,SAAqB,GAAG,EAA5B;AACAD,MAAAA,QAAQ,CAAEE,KAAD,IAAW;AAClBA,QAAAA,KAAK,CAACC,IAAN,CAAW;AAAEC,UAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,EAAR;AAAwBC,UAAAA,IAAI,EAAE,KAA9B;AAAqCC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL;AAAzC,SAAX;AACAR,QAAAA,SAAS,GAAGC,KAAZ;AACA,eAAO,CAAC,GAAGA,KAAJ,CAAP;AACD,OAJO,CAAR;AAMAT,MAAAA,QAAQ,CAACiB,OAAT,CAAiBhB,YAAjB,EAA+BO,SAA/B,EAA0CF,KAAK,CAACY,IAAhD;AACD;AACF,GAXQ,EAWN,CAACd,OAAD,EAAUG,QAAV,EAAoBD,KAAK,CAACY,IAA1B,CAXM,CAAT;AAaA,SAAOb,UAAP;AACD;;AAED,SAASc,SAAT,CAAmBhB,KAAnB,EAAiC;AAC/B,QAAME,UAAU,GAAGH,UAAU,CAACC,KAAD,CAA7B;AACA,QAAMiB,YAAY,GAAGrB,MAAM,CAAmB,IAAnB,CAA3B;;AAEA,WAASsB,OAAT,GAAmB;AACjB,UAAMV,IAAI,GAAGS,YAAY,CAACE,OAAb,CAAsBC,KAAnC;AACAlB,IAAAA,UAAU,CAACM,IAAD,CAAV;AACAS,IAAAA,YAAY,CAACE,OAAb,CAAsBC,KAAtB,GAA8B,EAA9B;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,GAAG,EAAEH,YAHP;AAIE,IAAA,WAAW,EAAC,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAkC,IAAA,OAAO,EAAEC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport { TodoItem, State } from \"./interfaces\";\n// const PORT = 8000;\nconst sharePOSTURL = `https://todonaman1.herokuapp.com/sharePOST`;\n\ninterface Props {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n}\n\nfunction useNewTodo(props: Props) {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const { state, setTodos } = props;\n  useEffect(() => {\n    if (newTodo !== \"\") {\n      let todosSend: TodoItem[] = [];\n      setTodos((todos) => {\n        todos.push({ text: newTodo.trim(), done: false, id: Math.random() });\n        todosSend = todos;\n        return [...todos];\n      });\n\n      netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n    }\n  }, [newTodo, setTodos, state.hash]);\n\n  return setNewTodo;\n}\n\nfunction InputTodo(props: Props) {\n  const setNewTodo = useNewTodo(props);\n  const inputNewTodo = useRef<HTMLInputElement>(null);\n\n  function addTodo() {\n    const text = inputNewTodo.current!.value;\n    setNewTodo(text);\n    inputNewTodo.current!.value = \"\";\n  }\n\n  return (\n    <div className=\"inputToDo\">\n      <input\n        type=\"text\"\n        id=\"input\"\n        ref={inputNewTodo}\n        placeholder=\"Enter a To-Do\"\n      />\n      <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n    </div>\n  );\n}\n\nexport default InputTodo;\n"]},"metadata":{},"sourceType":"module"}