{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/src/components/SharedTodo.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport SearchBar from \"./SearchBar\";\nimport TodoList from \"./TodoListShare\";\nimport InputTodo from \"./InputTodoShare\";\nimport \"./TodoApp.css\";\nconst PORT = 8000;\nconst getURL = `https://todonaman1.herokuapp.com/getdata`;\nconst shareSocketURL = `wss://todonaman1.herokuapp.com/shareSocket`;\n\nfunction SharedTodo(props) {\n  const url = new URL(document.URL);\n  const search_params = url.searchParams;\n  const hash_val = search_params.get(\"hash\");\n  const [todos, setTodos] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let [filteredTodos, setFilteredTodos] = useState(null);\n  const [date] = useState(new Date().toLocaleDateString(\"en-IN\", {\n    day: \"numeric\",\n    month: \"short\",\n    weekday: \"short\"\n  }));\n  const [hash] = useState(hash_val);\n  const [, setSocket] = useState(new WebSocket(shareSocketURL));\n  const state = {\n    todos: todos,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    hash: hash,\n    listNum: 1,\n    totalLists: 1,\n    id_token: null,\n    sharing: \"off\"\n  }; // let updateState = (stateData:State) => {\n  //     if(stateData.todos) setTodos([...stateData.todos]);\n  //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n  //     if(stateData.filteredTodos !== undefined){\n  //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n  //         else setFilteredTodos([...stateData.filteredTodos]);\n  //     }\n  //     if(stateData.date) setDate(stateData.date);\n  //     if(stateData.hash) setHash(stateData.hash);\n  // }\n\n  useEffect(() => {\n    console.log(\"here Mount\"); // this.onLoad();\n\n    let startSocket = new WebSocket(shareSocketURL);\n    setSocket(startSocket);\n    console.log(\"initial load\");\n    let todos = [];\n    netCalls.getJSON(getURL, (err, data) => {\n      if (err !== null) {\n        console.log(\"Empty\");\n        setTodos([...todos]);\n      } else {\n        console.log(\"Loaded\");\n        console.log(data);\n        let dataWithKey = data;\n        if (dataWithKey[\"json\"] !== undefined) setTodos(JSON.parse(dataWithKey[\"json\"]));\n      }\n    }, hash, startSocket);\n\n    startSocket.onmessage = event => {\n      console.log(event.data);\n      let data = JSON.parse(event.data);\n      setTodos([...data]);\n    };\n  }, [hash]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, date), /*#__PURE__*/React.createElement(SearchBar, {\n    state: state,\n    setFilteredTodos: setFilteredTodos,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TodoList, {\n    state: state,\n    setTodos: setTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputTodo, {\n    state: state,\n    setTodos: setTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SharedTodo;","map":{"version":3,"sources":["/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/src/components/SharedTodo.tsx"],"names":["React","useState","useEffect","netCalls","SearchBar","TodoList","InputTodo","PORT","getURL","shareSocketURL","SharedTodo","props","url","URL","document","search_params","searchParams","hash_val","get","todos","setTodos","searchQuery","setSearchQuery","filteredTodos","setFilteredTodos","date","Date","toLocaleDateString","day","month","weekday","hash","setSocket","WebSocket","state","listNum","totalLists","id_token","sharing","console","log","startSocket","getJSON","err","data","dataWithKey","undefined","JSON","parse","onmessage","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport SearchBar from \"./SearchBar\";\nimport TodoList from \"./TodoListShare\";\nimport InputTodo from \"./InputTodoShare\";\nimport \"./TodoApp.css\";\nimport { State, TodoItem } from \"./interfaces\";\nconst PORT = 8000;\nconst getURL = `https://todonaman1.herokuapp.com/getdata`;\nconst shareSocketURL = `wss://todonaman1.herokuapp.com/shareSocket`;\ninterface Data {\n  [Key: string]: string | undefined;\n}\n\nfunction SharedTodo(props: {\n  state: {\n    id_token: string;\n  };\n}) {\n  const url = new URL(document.URL);\n  const search_params = url.searchParams;\n  const hash_val = search_params.get(\"hash\");\n  const [todos, setTodos] = useState<TodoItem[]>([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let [filteredTodos, setFilteredTodos] = useState<TodoItem[] | null>(null);\n  const [date] = useState(\n    new Date().toLocaleDateString(\"en-IN\", {\n      day: \"numeric\",\n      month: \"short\",\n      weekday: \"short\",\n    })\n  );\n  const [hash] = useState(hash_val);\n  const [, setSocket] = useState<WebSocket>(new WebSocket(shareSocketURL));\n  const state: State = {\n    todos: todos,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    hash: hash,\n    listNum: 1,\n    totalLists: 1,\n    id_token: null,\n    sharing: \"off\",\n  };\n\n  // let updateState = (stateData:State) => {\n  //     if(stateData.todos) setTodos([...stateData.todos]);\n  //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n  //     if(stateData.filteredTodos !== undefined){\n  //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n  //         else setFilteredTodos([...stateData.filteredTodos]);\n  //     }\n  //     if(stateData.date) setDate(stateData.date);\n  //     if(stateData.hash) setHash(stateData.hash);\n  // }\n\n  useEffect(() => {\n    console.log(\"here Mount\");\n    // this.onLoad();\n    let startSocket = new WebSocket(shareSocketURL);\n    setSocket(startSocket);\n\n    console.log(\"initial load\");\n    let todos: TodoItem[] = [];\n    netCalls.getJSON(\n      getURL,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          let dataWithKey = data as Data;\n          if (dataWithKey[\"json\"] !== undefined)\n            setTodos(JSON.parse(dataWithKey[\"json\"]));\n        }\n      },\n      hash,\n      startSocket\n    );\n\n    startSocket.onmessage = (event) => {\n      console.log(event.data);\n      let data = JSON.parse(event.data);\n      setTodos([...data]);\n    };\n  }, [hash]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"date\">{date}</div>\n        <SearchBar\n          state={state}\n          setFilteredTodos={setFilteredTodos}\n          setSearchQuery={setSearchQuery}\n        />\n      </div>\n      <TodoList state={state} setTodos={setTodos} />\n      <InputTodo state={state} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default SharedTodo;\n"]},"metadata":{},"sourceType":"module"}