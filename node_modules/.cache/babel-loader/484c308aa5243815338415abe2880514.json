{"ast":null,"code":"import _toConsumableArray from\"/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import netCalls from\"../netCallsShare\";// const PORT = 8000;\nvar sharePOSTURL=\"https://todonaman1.herokuapp.com/sharePOST\";function TodoList(props){var tickOrDelete=function tickOrDelete(event){var btn=event.target;var todos=props.state.todos;var item=btn.parentElement;var ind=0;if(item!=null){var todoText=item.querySelector(\".text\");if(todoText!=null)ind=todos.findIndex(function(ele){return ele.text===todoText.innerText;});console.log(ind);}// Tick Case\nif(btn.id===\"tick\"){todos[ind].done=!todos[ind].done;props.setTodos(_toConsumableArray(todos));netCalls.putJSON(sharePOSTURL,todos,props.state.hash);}// Delete Case\nelse if(btn.id===\"delete\"){// item.remove();\ntodos.splice(ind,1);props.setTodos(_toConsumableArray(todos));netCalls.putJSON(sharePOSTURL,todos,props.state.hash);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(TodoListUI,{state:props.state,tickOrDelete:tickOrDelete}));}var TodoListUI=function TodoListUI(props){var _state$filteredTodos;var state=props.state,tickOrDelete=props.tickOrDelete;var todos=(_state$filteredTodos=state.filteredTodos)!==null&&_state$filteredTodos!==void 0?_state$filteredTodos:state.todos;var todoList=todos.map(function(todo){var doneTodo=todo.done?\"text lineThrough\":\"text\";return/*#__PURE__*/React.createElement(\"li\",{className:\"item\",key:todo.id},/*#__PURE__*/React.createElement(\"p\",{className:doneTodo},todo.text),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-check tick\",id:\"tick\",onClick:tickOrDelete}),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-trash delete\",id:\"delete\",onClick:tickOrDelete}));});return/*#__PURE__*/React.createElement(\"ul\",{id:\"list\"},todoList);};export default TodoList;","map":{"version":3,"sources":["/home/revpro/Desktop/new/deploy/ToDoAppReact/ToDoApp/src/components/TodoListShare.tsx"],"names":["React","netCalls","sharePOSTURL","TodoList","props","tickOrDelete","event","btn","target","todos","state","item","parentElement","ind","todoText","querySelector","findIndex","ele","text","innerText","console","log","id","done","setTodos","putJSON","hash","splice","TodoListUI","filteredTodos","todoList","map","todo","doneTodo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport { State, TodoItem } from \"./interfaces\";\n// const PORT = 8000;\nconst sharePOSTURL = `https://todonaman1.herokuapp.com/sharePOST`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nfunction TodoList(props: Props) {\n  let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const btn = event.target as HTMLElement;\n    let todos = props.state.todos;\n\n    const item = btn.parentElement;\n    let ind: number = 0;\n    if (item != null) {\n      const todoText = item.querySelector(\".text\") as HTMLParagraphElement;\n      if (todoText != null)\n        ind = todos.findIndex((ele) => ele.text === todoText.innerText);\n      console.log(ind);\n    }\n    // Tick Case\n    if (btn.id === \"tick\") {\n      todos[ind].done = !todos[ind].done;\n\n      props.setTodos([...todos]);\n      netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n    }\n    // Delete Case\n    else if (btn.id === \"delete\") {\n      // item.remove();\n      todos.splice(ind, 1);\n\n      props.setTodos([...todos]);\n      netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n    }\n  };\n\n  return (\n    <div className=\"todo\">\n      <TodoListUI state={props.state} tickOrDelete={tickOrDelete} />\n    </div>\n  );\n}\n\nconst TodoListUI = (props: PropsUI) => {\n  const { state, tickOrDelete } = props;\n  let todos = state.filteredTodos ?? state.todos;\n  let todoList = todos.map((todo) => {\n    let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n    return (\n      <li className=\"item\" key={todo.id}>\n        <p className={doneTodo}>{todo.text}</p>\n        <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n        <i\n          className=\"fas fa-trash delete\"\n          id=\"delete\"\n          onClick={tickOrDelete}\n        ></i>\n      </li>\n    );\n  });\n  return <ul id=\"list\">{todoList}</ul>;\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}