{"version":3,"sources":["components/Login.tsx","netCallsMod.ts","components/ListSelector.tsx","components/SearchBar.tsx","components/TodoList.tsx","components/InputTodo.tsx","components/ShareableLink.tsx","tree_mirror.js","components/TodoApp.tsx","netCallsShare.ts","components/TodoListShare.tsx","components/InputTodoShare.tsx","components/SharedTodo.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Login","props","onSignIn","googleUser","i","console","log","id_token","getAuthResponse","updateState","localStorage","setItem","window","location","assign","useEffect","gapi","signin2","render","scope","width","height","longtitle","theme","onsuccess","className","id","netCalls","url","listNum","callback","a","postMessage","fetch","method","headers","body","response","json","result","status","todos","postJSON","token","JSON","stringify","text","undefined","getJSON","putJSON","verifyToken","generateLink","generateSSCode","ListSelectorUI","state","getList","addNewList","lists","optionsList","totalLists","push","value","toString","ref","onChange","onClick","ListSelector","setTodos","useRef","err","data","parse","current","selectedIndex","e","Number","SearchBar","setFilteredTodos","setSearchQuery","searchInput","type","event","trim","toLowerCase","filteredTodos","forEach","ele","indexOf","placeholder","TodoListUI","tickOrDelete","todoList","map","todo","doneTodo","done","key","TodoList","btn","target","HTMLElement","item","parentElement","todoText","querySelector","ind","findIndex","innerText","splice","InputTodo","inputNewTodo","todosSend","Math","random","ShareableLinkUI","genShareLink","linkAddRef","ShareableLink","linkAdd","then","innerHTML","TreeMirrorClient","TreeMirror","root","delegate","this","idMap","prototype","initialize","rootId","children","length","deserializeNode","applyChanged","removed","addedOrMoved","attributes","_this","node","parentNode","previousSibling","removeChild","parent","previous","insertBefore","nextSibling","firstChild","Object","keys","attrName","newVal","removeAttribute","setAttribute","textContent","nodeData","doc","ownerDocument","nodeType","Node","COMMENT_NODE","createComment","TEXT_NODE","createTextNode","DOCUMENT_TYPE_NODE","implementation","createDocumentType","name","publicId","systemId","ELEMENT_NODE","createElement","tagName","appendChild","childNodes","mirror","testingQueries","nextId","knownNodes","MutationSummary","NodeMap","serializeNode","child","queries","all","concat","mutationSummary","rootNode","summaries","disconnect","rememberNode","set","forgetNode","delete","recursive","get","docType","elm","attr","serializeAddedAndMoved","added","reparented","reordered","parentMap","moved","has","serializeAttributeChanges","attributeChanged","element","record","getAttribute","summary","characterDataChanged","socketURL","TodoApp","useState","setListNum","setTotalLists","searchQuery","Date","toLocaleDateString","day","month","weekday","date","setDate","getItem","setID","sharing","setSharing","setSocket","peer","dataChannel","msgs","clear","peerConn","peerDataSend","send","socket","close","mirrorClient","mousePos","WebSocket","document","onmousemove","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","x","pageX","y","pageY","onscroll","verScroll","scrollTop","scroll","onopen","base","href","match","f","args","onmessage","RTCPeerConnection","iceServers","urls","onicecandidate","candidate","onconnectionstatechange","connectionState","setRemoteDescription","RTCSessionDescription","createAnswer","offerToReceiveAudio","offerToReceiveVideo","descrip","setLocalDescription","ondatachannel","channel","onclose","addIceCandidate","RTCIceCandidate","useScreenShareWithWebRTC","load","auth2","init","preventDefault","getAuthInstance","signOut","history","stateData","hash","sharePOSTURL","setNewTodo","newTodo","useNewTodo","SharedTodo","hash_val","URL","searchParams","startSocket","dataWithKey","App","forceRefresh","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.211714f3.chunk.js","sourcesContent":["// import { History } from 'history';\nimport React, { useEffect } from \"react\";\nimport \"./Login.css\";\n// import { Redirect } from 'react-router-dom';\n// import { rootCertificates } from 'tls';\ndeclare var gapi: any;\n\ninterface Props {\n  updateState: (id_token: string) => void;\n  state: {\n    id_token: string;\n  };\n  /* other props for ChildComponent */\n}\nfunction Login(props: Props) {\n  let onSignIn = (googleUser: {\n    getAuthResponse: () => { (): any; new (): any; id_token: string };\n  }) => {\n    // console.log(googleUser);\n    for (let i = 0; i < 10; i++) console.log(\"\\n\");\n    const id_token: string = googleUser.getAuthResponse().id_token;\n    props.updateState(id_token);\n    localStorage.setItem(\"id_token\", id_token);\n    window.location.assign(\"https://todoappdeploy.netlify.app/todos\");\n  };\n\n  useEffect(() => {\n    console.log(\"Component Mounted\");\n    gapi.signin2.render(\"gsign\", {\n      scope: \"profile email\",\n      width: 200,\n      height: 50,\n      longtitle: true,\n      theme: \"dark\",\n      onsuccess: onSignIn,\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"g-signin2\" id=\"gsign\">\n        {\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","var netCalls = (function () {\n  async function getJSON(\n    url: string,\n    listNum: number,\n    callback: (err: number | null, data: object) => void,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(url);\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.json();\n    if (response.status === 200) {\n      callback(null, result);\n    } else {\n      callback(response.status, result);\n    }\n  }\n\n  async function putJSON(\n    url: string,\n    listNum: number,\n    todos: object[],\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postJSON = {\n      token: id_token,\n      listNum: listNum,\n      json: JSON.stringify(todos),\n    };\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(postJSON),\n    });\n  }\n\n  async function verifyToken(url: string, id_token: string | null) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    console.log(\"Signed in as: \" + result);\n  }\n\n  async function generateLink(\n    url: string,\n    listNum: number,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    // linkAdd.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n    return result;\n  }\n\n  async function generateSSCode(url: string) {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: undefined,\n    });\n    let result = await response.text();\n    return result;\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n    verifyToken: verifyToken,\n    generateLink: generateLink,\n    generateSSCode: generateSSCode,\n  };\n})();\n\nexport default netCalls;\n","import React, { useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\n// const PORT = 8000;\nconst getURL = `https://todonaman1.herokuapp.com/getdata`;\n\ntype Props = {\n  state: State;\n  updateState: (stateData: Partial<State>) => void;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  getList: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  addNewList: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  lists: React.RefObject<HTMLSelectElement>;\n};\n\nconst ListSelector: React.FunctionComponent<Props> = ({\n  state,\n  updateState,\n  setTodos,\n}) => {\n  const lists = useRef<HTMLSelectElement>(null);\n  useEffect(() => {\n    let todos = [];\n    netCalls.getJSON(\n      getURL,\n      state.listNum,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          todos = JSON.parse(data[\"json\"]);\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        }\n      },\n      state.id_token\n    );\n    if (lists.current !== null) lists.current.selectedIndex = state.listNum - 1;\n  }, [state.listNum, state.id_token, setTodos]);\n\n  let getList = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(\"onChange\");\n    if (lists.current === null) return;\n    let listNum = Number(lists.current.selectedIndex + 1);\n    if (listNum === 0) return;\n    console.log(listNum);\n    updateState({ listNum: listNum });\n  };\n\n  let addNewList = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let totalLists = state.totalLists + 1;\n    updateState({ totalLists: totalLists });\n    console.log(totalLists);\n    updateState({ listNum: totalLists });\n  };\n\n  return (\n    <ListSelectorUI\n      state={state}\n      getList={getList}\n      addNewList={addNewList}\n      lists={lists}\n    />\n  );\n};\n\nconst ListSelectorUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  getList,\n  addNewList,\n  lists,\n}) => {\n  //   const { state, getList, addNewList, lists } = props;\n  let optionsList: JSX.Element[] = [];\n  for (let i = 1; i <= state.totalLists; i++) {\n    optionsList.push(\n      <option value={i.toString()}>{\"List\" + i.toString()}</option>\n    );\n  }\n  return (\n    <div className=\"multipleLists\">\n      <select id=\"lists\" ref={lists} onChange={getList}>\n        {optionsList}\n      </select>\n      <i className=\"fas fa-list\" id=\"addList\" onClick={addNewList}></i>\n    </div>\n  );\n};\n\nexport default ListSelector;\n","import React, { useRef } from \"react\";\nimport { State, TodoItem } from \"./TodoApp\";\n\ntype Props = {\n  state: State;\n  setFilteredTodos: React.Dispatch<React.SetStateAction<TodoItem[] | null>>;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchBar: React.FunctionComponent<Props> = ({\n  state,\n  setFilteredTodos,\n  setSearchQuery,\n}) => {\n  // const {state, setFilteredTodos, setSearchQuery} = props;\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  let onSearchInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (searchInput.current === null) return;\n    let text = searchInput.current.value;\n    text = text.trim().toLowerCase();\n    setSearchQuery(text);\n    let filteredTodos: TodoItem[] | null = [];\n    state.todos.forEach((ele) => {\n      if (ele.text.toLowerCase().indexOf(text) !== -1) {\n        filteredTodos!.push(ele);\n      }\n    });\n    if (text === \"\") {\n      filteredTodos = null;\n      setFilteredTodos(null);\n    } else {\n      setFilteredTodos([...filteredTodos]);\n    }\n  };\n\n  let resetSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (searchInput.current === null) return;\n    searchInput.current.value = \"\";\n    setSearchQuery(\"\");\n    setFilteredTodos(null);\n  };\n\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        ref={searchInput}\n        onChange={onSearchInputChanged}\n        placeholder=\"Search for a To-Do\"\n      />\n      <i className=\"fas fa-times\" id=\"close\" onClick={resetSearch}></i>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst putURL = `https://todonaman1.herokuapp.com/postdata`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: any) => void;\n};\n\nconst TodoList: React.FunctionComponent<Props> = ({ state, setTodos }) => {\n  let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let btn: HTMLElement;\n    if (event.target instanceof HTMLElement) btn = event.target;\n    else return;\n    let todos = state.todos;\n\n    const item = btn.parentElement;\n    if (item === null) return;\n    const todoText = item.querySelector(\".text\") as HTMLElement;\n    let ind = todos.findIndex((ele) => ele.text === todoText.innerText);\n    // Tick Case\n    if (btn.id === \"tick\") {\n      todos[ind].done = !todos[ind].done;\n    }\n    // Delete Case\n    else if (btn.id === \"delete\") {\n      // item.remove();\n      todos.splice(ind, 1);\n    }\n\n    setTodos([...todos]);\n    netCalls.putJSON(putURL, state.listNum, todos, state.id_token);\n  };\n\n  return (\n    <div className=\"todo\">\n      <TodoListUI state={state} tickOrDelete={tickOrDelete} />\n    </div>\n  );\n};\n\nconst TodoListUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  tickOrDelete,\n}) => {\n  // const { state, tickOrDelete } = props;\n  let Todos = state.filteredTodos ?? state.todos;\n  let todoList = Todos.map((todo) => {\n    let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n    return (\n      <li className=\"item\" key={todo.id}>\n        <p className={doneTodo}>{todo.text}</p>\n        <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n        <i\n          className=\"fas fa-trash delete\"\n          id=\"delete\"\n          onClick={tickOrDelete}\n        ></i>\n      </li>\n    );\n  });\n  return <ul id=\"list\">{todoList}</ul>;\n};\n\nexport default TodoList;\n","import React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\n// const PORT = 8000;\nconst putURL = `https://todonaman1.herokuapp.com/postdata`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\nconst InputTodo: React.FunctionComponent<Props> = ({ state, setTodos }) => {\n  const inputNewTodo = useRef<HTMLInputElement>(null);\n\n  function addTodo(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n    if (inputNewTodo.current === null) return;\n    let text = inputNewTodo.current.value;\n    let todosSend: TodoItem[] = state.todos;\n    todosSend.push({ text: text.trim(), done: false, id: Math.random() });\n    setTodos([...todosSend]);\n    console.log(todosSend);\n    netCalls.putJSON(putURL, state.listNum, todosSend, state.id_token);\n    inputNewTodo.current.value = \"\";\n  }\n\n  return (\n    <div className=\"inputToDo\">\n      <input\n        type=\"text\"\n        id=\"input\"\n        ref={inputNewTodo}\n        placeholder=\"Enter a To-Do\"\n      />\n      <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n    </div>\n  );\n};\n\nexport default InputTodo;\n","import React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State } from \"./TodoApp\";\n\n// const PORT = 8000;\nconst shareURL = `https://todonaman1.herokuapp.com/shareLink`;\n\ntype Props = {\n  state: State;\n};\n\ntype PropsUI = {\n  state: State;\n  genShareLink: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  linkAddRef: React.RefObject<HTMLParagraphElement>;\n};\n\nconst ShareableLink: React.FunctionComponent<Props> = ({ state }) => {\n  const linkAdd = useRef<HTMLParagraphElement>(null);\n\n  let genShareLink = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    netCalls\n      .generateLink(shareURL, state.listNum, state.id_token)\n      .then((result) => {\n        if (linkAdd.current === null) return;\n        linkAdd.current.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n      });\n  };\n\n  return (\n    <ShareableLinkUI\n      state={state}\n      genShareLink={genShareLink}\n      linkAddRef={linkAdd}\n    />\n  );\n};\n\nconst ShareableLinkUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  genShareLink,\n  linkAddRef,\n}) => {\n  // const { state, genShareLink, linkAddRef } = props;\n  return (\n    <div className=\"shareLink\">\n      <p id=\"linkAdd\" ref={linkAddRef}>\n        {\"Generate Link for List \" + state.listNum.toString()}\n      </p>\n      <i className=\"fas fa-link\" id=\"genLink\" onClick={genShareLink}></i>\n    </div>\n  );\n};\n\nexport default ShareableLink;\n","///<reference path='mutation-summary.js'/>\nimport MutationSummary from \"mutation-summary\";\n\nexport var TreeMirror = (function () {\n  function TreeMirror(root, delegate) {\n    this.root = root;\n    this.delegate = delegate;\n    this.idMap = {};\n  }\n  TreeMirror.prototype.initialize = function (rootId, children) {\n    this.idMap[rootId] = this.root;\n    for (var i = 0; i < children.length; i++)\n      this.deserializeNode(children[i], this.root);\n  };\n  TreeMirror.prototype.applyChanged = function (\n    removed,\n    addedOrMoved,\n    attributes,\n    text\n  ) {\n    var _this = this;\n    // NOTE: Applying the changes can result in an attempting to add a child\n    // to a parent which is presently an ancestor of the parent. This can occur\n    // based on random ordering of moves. The way we handle this is to first\n    // remove all changed nodes from their parents, then apply.\n    addedOrMoved.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      var parent = _this.deserializeNode(data.parentNode);\n      var previous = _this.deserializeNode(data.previousSibling);\n      if (node.parentNode) node.parentNode.removeChild(node);\n    });\n    removed.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      if (node.parentNode) node.parentNode.removeChild(node);\n    });\n    addedOrMoved.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      var parent = _this.deserializeNode(data.parentNode);\n      var previous = _this.deserializeNode(data.previousSibling);\n      parent.insertBefore(\n        node,\n        previous ? previous.nextSibling : parent.firstChild\n      );\n    });\n    attributes.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      Object.keys(data.attributes).forEach(function (attrName) {\n        var newVal = data.attributes[attrName];\n        if (newVal === null) {\n          node.removeAttribute(attrName);\n        } else {\n          if (\n            !_this.delegate ||\n            !_this.delegate.setAttribute ||\n            !_this.delegate.setAttribute(node, attrName, newVal)\n          ) {\n            node.setAttribute(attrName, newVal);\n          }\n        }\n      });\n    });\n    text.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      node.textContent = data.textContent;\n    });\n    removed.forEach(function (node) {\n      delete _this.idMap[node.id];\n    });\n  };\n  TreeMirror.prototype.deserializeNode = function (nodeData, parent) {\n    var _this = this;\n    if (nodeData === null) return null;\n    var node = this.idMap[nodeData.id];\n    if (node) return node;\n    var doc = this.root.ownerDocument;\n    if (doc === null) doc = this.root;\n    switch (nodeData.nodeType) {\n      case Node.COMMENT_NODE:\n        node = doc.createComment(nodeData.textContent);\n        break;\n      case Node.TEXT_NODE:\n        node = doc.createTextNode(nodeData.textContent);\n        break;\n      case Node.DOCUMENT_TYPE_NODE:\n        node = doc.implementation.createDocumentType(\n          nodeData.name,\n          nodeData.publicId,\n          nodeData.systemId\n        );\n        break;\n      case Node.ELEMENT_NODE:\n        if (this.delegate && this.delegate.createElement)\n          node = this.delegate.createElement(nodeData.tagName);\n        if (!node) node = doc.createElement(nodeData.tagName);\n        Object.keys(nodeData.attributes).forEach(function (name) {\n          if (\n            !_this.delegate ||\n            !_this.delegate.setAttribute ||\n            !_this.delegate.setAttribute(node, name, nodeData.attributes[name])\n          ) {\n            node.setAttribute(name, nodeData.attributes[name]);\n          }\n        });\n        break;\n    }\n    if (!node) throw \"ouch\";\n    this.idMap[nodeData.id] = node;\n    if (parent) parent.appendChild(node);\n    if (nodeData.childNodes) {\n      for (var i = 0; i < nodeData.childNodes.length; i++)\n        this.deserializeNode(nodeData.childNodes[i], node);\n    }\n    return node;\n  };\n  return TreeMirror;\n})();\nexport var TreeMirrorClient = (function () {\n  function TreeMirrorClient(target, mirror, testingQueries) {\n    var _this = this;\n    this.target = target;\n    this.mirror = mirror;\n    this.nextId = 1;\n    this.knownNodes = new MutationSummary.NodeMap();\n    var rootId = this.serializeNode(target).id;\n    var children = [];\n    for (var child = target.firstChild; child; child = child.nextSibling)\n      children.push(this.serializeNode(child, true));\n    this.mirror.initialize(rootId, children);\n    var self = this;\n    var queries = [{ all: true }];\n    if (testingQueries) queries = queries.concat(testingQueries);\n    this.mutationSummary = new MutationSummary({\n      rootNode: target,\n      callback: function (summaries) {\n        _this.applyChanged(summaries);\n      },\n      queries: queries,\n    });\n  }\n  TreeMirrorClient.prototype.disconnect = function () {\n    if (this.mutationSummary) {\n      this.mutationSummary.disconnect();\n      this.mutationSummary = undefined;\n    }\n  };\n  TreeMirrorClient.prototype.rememberNode = function (node) {\n    var id = this.nextId++;\n    this.knownNodes.set(node, id);\n    return id;\n  };\n  TreeMirrorClient.prototype.forgetNode = function (node) {\n    this.knownNodes.delete(node);\n  };\n  TreeMirrorClient.prototype.serializeNode = function (node, recursive) {\n    if (node === null) return null;\n    var id = this.knownNodes.get(node);\n    if (id !== undefined) {\n      return { id: id };\n    }\n    var data = {\n      nodeType: node.nodeType,\n      id: this.rememberNode(node),\n    };\n    switch (data.nodeType) {\n      case Node.DOCUMENT_TYPE_NODE:\n        var docType = node;\n        data.name = docType.name;\n        data.publicId = docType.publicId;\n        data.systemId = docType.systemId;\n        break;\n      case Node.COMMENT_NODE:\n      case Node.TEXT_NODE:\n        data.textContent = node.textContent;\n        break;\n      case Node.ELEMENT_NODE:\n        var elm = node;\n        data.tagName = elm.tagName;\n        data.attributes = {};\n        for (var i = 0; i < elm.attributes.length; i++) {\n          var attr = elm.attributes[i];\n          data.attributes[attr.name] = attr.value;\n        }\n        if (recursive && elm.childNodes.length) {\n          data.childNodes = [];\n          for (var child = elm.firstChild; child; child = child.nextSibling)\n            data.childNodes.push(this.serializeNode(child, true));\n        }\n        break;\n    }\n    return data;\n  };\n  TreeMirrorClient.prototype.serializeAddedAndMoved = function (\n    added,\n    reparented,\n    reordered\n  ) {\n    var _this = this;\n    var all = added.concat(reparented).concat(reordered);\n    var parentMap = new MutationSummary.NodeMap();\n    all.forEach(function (node) {\n      var parent = node.parentNode;\n      var children = parentMap.get(parent);\n      if (!children) {\n        children = new MutationSummary.NodeMap();\n        parentMap.set(parent, children);\n      }\n      children.set(node, true);\n    });\n    var moved = [];\n    parentMap.keys().forEach(function (parent) {\n      var children = parentMap.get(parent);\n      var keys = children.keys();\n      while (keys.length) {\n        var node = keys[0];\n        while (node.previousSibling && children.has(node.previousSibling))\n          node = node.previousSibling;\n        while (node && children.has(node)) {\n          var data = _this.serializeNode(node);\n          data.previousSibling = _this.serializeNode(node.previousSibling);\n          data.parentNode = _this.serializeNode(node.parentNode);\n          moved.push(data);\n          children.delete(node);\n          node = node.nextSibling;\n        }\n        var keys = children.keys();\n      }\n    });\n    return moved;\n  };\n  TreeMirrorClient.prototype.serializeAttributeChanges = function (\n    attributeChanged\n  ) {\n    var _this = this;\n    var map = new MutationSummary.NodeMap();\n    Object.keys(attributeChanged).forEach(function (attrName) {\n      attributeChanged[attrName].forEach(function (element) {\n        var record = map.get(element);\n        if (!record) {\n          record = _this.serializeNode(element);\n          record.attributes = {};\n          map.set(element, record);\n        }\n        record.attributes[attrName] = element.getAttribute(attrName);\n      });\n    });\n    return map.keys().map(function (node) {\n      return map.get(node);\n    });\n  };\n  TreeMirrorClient.prototype.applyChanged = function (summaries) {\n    var _this = this;\n    var summary = summaries[0];\n    var removed = summary.removed.map(function (node) {\n      return _this.serializeNode(node);\n    });\n    var moved = this.serializeAddedAndMoved(\n      summary.added,\n      summary.reparented,\n      summary.reordered\n    );\n    var attributes = this.serializeAttributeChanges(summary.attributeChanged);\n    var text = summary.characterDataChanged.map(function (node) {\n      var data = _this.serializeNode(node);\n      data.textContent = node.textContent;\n      return data;\n    });\n    this.mirror.applyChanged(removed, moved, attributes, text);\n    summary.removed.forEach(function (node) {\n      _this.forgetNode(node);\n    });\n  };\n  return TreeMirrorClient;\n})();\n","import React, { useState, useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport ListSelector from \"./ListSelector\";\nimport SearchBar from \"./SearchBar\";\nimport TodoList from \"./TodoList\";\nimport InputTodo from \"./InputTodo\";\nimport ShareableLink from \"./ShareableLink\";\nimport ScreenSharing from \"./ScreenSharing\";\nimport { TreeMirrorClient } from \"../tree_mirror\";\nimport \"./TodoApp.css\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ndeclare var gapi: any;\nconst PORT = 8000;\nconst ScreenSharePORT = 7000;\nconst getURL = `https://todonaman1.herokuapp.com/getdata`;\nconst socketURL = `ws://localhost:${ScreenSharePORT}/screenShareClient`;\n\nexport interface TodoItem {\n  text: string;\n  done: boolean;\n  id: number;\n}\n\nexport interface State {\n  todos: TodoItem[];\n  listNum: number;\n  totalLists: number;\n  searchQuery: string;\n  filteredTodos: TodoItem[] | null;\n  date: string;\n  id_token: string | null;\n  sharing: string;\n}\n\nfunction useScreenShareWithWebRTC(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [sharing, setSharing] = useState<string>(\"off\");\n  const [, setSocket] = useState<WebSocket | undefined>(undefined);\n  const peer = useRef<RTCPeerConnection>(null);\n  const dataChannel = useRef<RTCDataChannel>(null);\n  const msgs = useRef<string[]>([JSON.stringify({ clear: true })]);\n  const peerConn = useRef(false);\n\n  useEffect(() => {\n    let peerDataSend = (data) => {\n      if (peerConn.current === false) {\n        msgs.current.push(JSON.stringify(data));\n      } else {\n        dataChannel.current.send(JSON.stringify(data));\n      }\n    };\n\n    console.log(sharing);\n    if (sharing === \"off\") {\n      console.log(\"Entering off\");\n      // if(shareSocket !== undefined) shareSocket.close();\n      // setSocket(undefined);\n      setSocket((socket) => {\n        if (socket !== undefined) socket.close();\n        return undefined;\n      });\n    } else {\n      let socket = new WebSocket(socketURL + `?hash=${sharing}`);\n      setSocket(socket);\n\n      let mirrorClient: any;\n      let mousePos: { x: number; y: number; width: number; height: number };\n\n      document.onmousemove = (e) => {\n        let width =\n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        let height =\n          window.innerHeight ||\n          document.documentElement.clientHeight ||\n          document.body.clientHeight;\n\n        mousePos = {\n          x: e.pageX,\n          y: e.pageY,\n          width: width,\n          height: height,\n        };\n        // socket.send(JSON.stringify(mousePos));\n        peerDataSend(mousePos);\n      };\n\n      window.onscroll = () => {\n        let verScroll =\n          document.documentElement.scrollTop || document.body.scrollTop;\n        // socket.send(JSON.stringify({ scroll: verScroll }));\n        peerDataSend({ scroll: verScroll });\n      };\n\n      socket.onopen = () => {\n        peerDataSend({\n          base: window.location.href.match(/^(.*\\/)[^/]*$/)![1],\n        });\n        mirrorClient = new TreeMirrorClient(\n          document,\n          {\n            initialize: function (rootId: number, children: object[]) {\n              peerDataSend({\n                f: \"initialize\",\n                args: [rootId, children],\n              });\n            },\n\n            applyChanged: function (\n              removed: object[],\n              addedOrMoved: object[],\n              attributes: object[],\n              text: object[]\n            ) {\n              peerDataSend({\n                f: \"applyChanged\",\n                args: [removed, addedOrMoved, attributes, text],\n              });\n            },\n          },\n          null\n        );\n      };\n\n      socket.onmessage = function (event) {\n        let data = JSON.parse(event.data);\n        console.log(data);\n        if (data.type === \"offer\") {\n          console.log(\"Peer Creation\");\n          let config = {\n            iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n          };\n          peer.current = new RTCPeerConnection(config);\n\n          peer.current.onicecandidate = (event) => {\n            if (!event || !event.candidate) {\n              console.log(event.candidate);\n              return;\n            }\n            socket.send(\n              JSON.stringify({\n                type: \"candidate\",\n                value: event.candidate,\n              })\n            );\n          };\n\n          peer.current.onconnectionstatechange = (event) => {\n            if (peer.current.connectionState === \"connected\") {\n              console.log(\"Peer Connected\");\n            }\n          };\n\n          peer.current.setRemoteDescription(\n            new RTCSessionDescription(data.value)\n          );\n\n          let sdpConstraints = {\n            offerToReceiveAudio: false,\n            offerToReceiveVideo: false,\n          };\n          peer.current.createAnswer(sdpConstraints).then((descrip) => {\n            console.log(\"Sending Answer\");\n            peer.current.setLocalDescription(descrip);\n            socket.send(\n              JSON.stringify({\n                type: \"answer\",\n                value: descrip,\n              })\n            );\n          }, null);\n\n          peer.current.ondatachannel = (event) => {\n            dataChannel.current = event.channel;\n\n            dataChannel.current.onmessage = (event) => {\n              console.log(\"Message from Agent to Client on Data Channel\");\n            };\n            dataChannel.current.onopen = () => {\n              console.log(\"Data Channel Opened on Client\");\n              peerConn.current = true;\n              dataChannel.current.send(JSON.stringify(msgs.current));\n            };\n            dataChannel.current.onclose = () => {\n              console.log(\"Data Channel Closed on Client\");\n            };\n          };\n        }\n        if (data.type === \"candidate\") {\n          console.log(\"Processing ICE\");\n          peer.current.addIceCandidate(new RTCIceCandidate(data.value));\n        }\n      };\n\n      socket.onclose = function () {\n        console.log(\"Screen Sharing Socket Close\");\n        // Maybe send a message to the other peer to close\n        // peer.current.destroy();\n        dataChannel.current.send(JSON.stringify({ clear: true }));\n        peer.current.close();\n        peer.current = null;\n        mirrorClient.disconnect();\n      };\n    }\n  }, [sharing]);\n\n  return [sharing, setSharing];\n}\n\nfunction TodoApp(props: RouteComponentProps) {\n  const [todos, setTodos] = useState<TodoItem[]>([]);\n  const [listNum, setListNum] = useState<number>(1);\n  const [totalLists, setTotalLists] = useState<number>(1);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  let [filteredTodos, setFilteredTodos] = useState<TodoItem[] | null>(null);\n  const [date, setDate] = useState<string>(\n    new Date().toLocaleDateString(\"en-IN\", {\n      day: \"numeric\",\n      month: \"short\",\n      weekday: \"short\",\n    })\n  );\n  const [id_token, setID] = useState<string | null>(\n    localStorage.getItem(\"id_token\")\n  );\n  const [sharing, setSharing] = useScreenShareWithWebRTC();\n  const state: State = {\n    todos: todos,\n    listNum: listNum,\n    totalLists: totalLists,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    id_token: id_token,\n    sharing: sharing,\n  };\n\n  let updateState = (stateData: Partial<State>) => {\n    if (stateData.todos) setTodos([...stateData.todos]);\n    if (stateData.listNum) setListNum(stateData.listNum);\n    if (stateData.totalLists) setTotalLists(stateData.totalLists);\n    if (stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n    if (stateData.filteredTodos !== undefined) {\n      if (stateData.filteredTodos === null) setFilteredTodos(null);\n      else setFilteredTodos([...stateData.filteredTodos]);\n    }\n    if (stateData.date) setDate(stateData.date);\n    if (stateData.id_token) setID(stateData.id_token);\n    if (stateData.sharing) setSharing(stateData.sharing);\n  };\n\n  useEffect(() => {\n    netCalls.getJSON(\n      getURL,\n      1,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n        } else {\n          setTodos(JSON.parse(data[\"json\"]));\n          setTotalLists(Number(data[\"listNum\"]));\n        }\n      },\n      id_token\n    );\n\n    console.log(\"Reached.\");\n    gapi.load(\"auth2\", function () {\n      gapi.auth2.init();\n    });\n  }, [id_token]);\n\n  let signOutFunc = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    console.log(\"Sign out started\");\n    var auth2 = gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log(\"User signed out.\");\n      props.history.push(\"/login\");\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"date\">{date}</div>\n        <a href=\"\" id=\"signOut\" onClick={signOutFunc}>\n          Sign Out\n        </a>\n        <ListSelector\n          state={state}\n          updateState={updateState}\n          setTodos={setTodos}\n        />\n        <SearchBar\n          state={state}\n          setFilteredTodos={setFilteredTodos}\n          setSearchQuery={setSearchQuery}\n        />\n      </div>\n      <TodoList state={state} setTodos={setTodos} />\n      <InputTodo state={state} setTodos={setTodos} />\n      <ShareableLink state={state} />\n      {/* <ScreenSharing sharing={sharing} setSharing={setSharing} /> */}\n    </div>\n  );\n}\n\nexport default TodoApp;\n","var netCalls = (function () {\n  async function getJSON(\n    url: string,\n    callback: (err: number | null, data: object) => void,\n    hash: string | null,\n    socket: WebSocket\n  ) {\n    let postJSON = { hash: hash };\n    socket.onopen = function () {\n      socket.send(JSON.stringify(postJSON));\n    };\n  }\n\n  async function putJSON(url: string, todos: object[], hash: string | null) {\n    let postJSON = { hash: hash, json: JSON.stringify(todos) };\n    console.log(todos);\n    console.log(postJSON);\n    // socket.send(JSON.stringify(postJSON));\n\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(postJSON),\n    });\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n  };\n})();\n\nexport default netCalls;\n","import React from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport { State, TodoItem } from \"./interfaces\";\n// const PORT = 8000;\nconst sharePOSTURL = `https://todonaman1.herokuapp.com/sharePOST`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nfunction TodoList(props: Props) {\n  let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const btn = event.target as HTMLElement;\n    let todos = props.state.todos;\n\n    const item = btn.parentElement;\n    let ind: number = 0;\n    if (item != null) {\n      const todoText = item.querySelector(\".text\") as HTMLParagraphElement;\n      if (todoText != null)\n        ind = todos.findIndex((ele) => ele.text === todoText.innerText);\n      console.log(ind);\n    }\n    // Tick Case\n    if (btn.id === \"tick\") {\n      todos[ind].done = !todos[ind].done;\n\n      props.setTodos([...todos]);\n      netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n    }\n    // Delete Case\n    else if (btn.id === \"delete\") {\n      // item.remove();\n      todos.splice(ind, 1);\n\n      props.setTodos([...todos]);\n      netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n    }\n  };\n\n  return (\n    <div className=\"todo\">\n      <TodoListUI state={props.state} tickOrDelete={tickOrDelete} />\n    </div>\n  );\n}\n\nconst TodoListUI = (props: PropsUI) => {\n  const { state, tickOrDelete } = props;\n  let todos = state.filteredTodos ?? state.todos;\n  let todoList = todos.map((todo) => {\n    let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n    return (\n      <li className=\"item\" key={todo.id}>\n        <p className={doneTodo}>{todo.text}</p>\n        <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n        <i\n          className=\"fas fa-trash delete\"\n          id=\"delete\"\n          onClick={tickOrDelete}\n        ></i>\n      </li>\n    );\n  });\n  return <ul id=\"list\">{todoList}</ul>;\n};\n\nexport default TodoList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport { TodoItem, State } from \"./interfaces\";\n// const PORT = 8000;\nconst sharePOSTURL = `https://todonaman1.herokuapp.com/sharePOST`;\n\ninterface Props {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n}\n\nfunction useNewTodo(props: Props) {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const { state, setTodos } = props;\n  useEffect(() => {\n    if (newTodo !== \"\") {\n      let todosSend: TodoItem[] = [];\n      setTodos((todos) => {\n        todos.push({ text: newTodo.trim(), done: false, id: Math.random() });\n        todosSend = todos;\n        return [...todos];\n      });\n\n      netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n    }\n  }, [newTodo, setTodos, state.hash]);\n\n  return setNewTodo;\n}\n\nfunction InputTodo(props: Props) {\n  const setNewTodo = useNewTodo(props);\n  const inputNewTodo = useRef<HTMLInputElement>(null);\n\n  function addTodo() {\n    const text = inputNewTodo.current!.value;\n    setNewTodo(text);\n    inputNewTodo.current!.value = \"\";\n  }\n\n  return (\n    <div className=\"inputToDo\">\n      <input\n        type=\"text\"\n        id=\"input\"\n        ref={inputNewTodo}\n        placeholder=\"Enter a To-Do\"\n      />\n      <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n    </div>\n  );\n}\n\nexport default InputTodo;\n","import React, { useState, useEffect } from \"react\";\nimport netCalls from \"../netCallsShare\";\nimport SearchBar from \"./SearchBar\";\nimport TodoList from \"./TodoListShare\";\nimport InputTodo from \"./InputTodoShare\";\nimport \"./TodoApp.css\";\nimport { State, TodoItem } from \"./interfaces\";\n// const PORT = 8000;\nconst getURL = `https://todonaman1.herokuapp.com/getdata`;\nconst shareSocketURL = `wss://todonaman1.herokuapp.com/shareSocket`;\ninterface Data {\n  [Key: string]: string | undefined;\n}\n\nfunction SharedTodo(props: {\n  state: {\n    id_token: string;\n  };\n}) {\n  const url = new URL(document.URL);\n  const search_params = url.searchParams;\n  const hash_val = search_params.get(\"hash\");\n  const [todos, setTodos] = useState<TodoItem[]>([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let [filteredTodos, setFilteredTodos] = useState<TodoItem[] | null>(null);\n  const [date] = useState(\n    new Date().toLocaleDateString(\"en-IN\", {\n      day: \"numeric\",\n      month: \"short\",\n      weekday: \"short\",\n    })\n  );\n  const [hash] = useState(hash_val);\n  const [, setSocket] = useState<WebSocket>(new WebSocket(shareSocketURL));\n  const state: State = {\n    todos: todos,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    hash: hash,\n    listNum: 1,\n    totalLists: 1,\n    id_token: null,\n    sharing: \"off\",\n  };\n\n  // let updateState = (stateData:State) => {\n  //     if(stateData.todos) setTodos([...stateData.todos]);\n  //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n  //     if(stateData.filteredTodos !== undefined){\n  //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n  //         else setFilteredTodos([...stateData.filteredTodos]);\n  //     }\n  //     if(stateData.date) setDate(stateData.date);\n  //     if(stateData.hash) setHash(stateData.hash);\n  // }\n\n  useEffect(() => {\n    console.log(\"here Mount\");\n    // this.onLoad();\n    let startSocket = new WebSocket(shareSocketURL);\n    setSocket(startSocket);\n\n    console.log(\"initial load\");\n    let todos: TodoItem[] = [];\n    netCalls.getJSON(\n      getURL,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          let dataWithKey = data as Data;\n          if (dataWithKey[\"json\"] !== undefined)\n            setTodos(JSON.parse(dataWithKey[\"json\"]));\n        }\n      },\n      hash,\n      startSocket\n    );\n\n    startSocket.onmessage = (event) => {\n      console.log(event.data);\n      let data = JSON.parse(event.data);\n      setTodos([...data]);\n    };\n  }, [hash]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"date\">{date}</div>\n        <SearchBar\n          state={state}\n          setFilteredTodos={setFilteredTodos}\n          setSearchQuery={setSearchQuery}\n        />\n      </div>\n      <TodoList state={state} setTodos={setTodos} />\n      <InputTodo state={state} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default SharedTodo;\n","import React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport TodoApp from \"./components/TodoApp\";\nimport SharedTodo from \"./components/SharedTodo\";\nimport ScreenShareAgent from \"./components/ScreenShareAgent\";\nimport { BrowserRouter, Route, RouteComponentProps } from \"react-router-dom\";\n\nfunction App(props: {}) {\n  const [id_token, setID] = useState(\"\");\n  const state = {\n    id_token: id_token,\n  };\n\n  let updateState = (id_token: string) => {\n    console.log(id_token);\n    setID(id_token);\n  };\n\n  return (\n    <BrowserRouter forceRefresh={true}>\n      <div className=\"App\">\n        <Route\n          path=\"/login\"\n          render={(props: {}) => (\n            <Login {...props} state={state} updateState={updateState} />\n          )}\n        ></Route>\n        <Route\n          path=\"/todos\"\n          render={(props: RouteComponentProps) => <TodoApp {...props} />}\n        ></Route>\n        <Route\n          path=\"/share\"\n          render={(props: {}) => <SharedTodo {...props} state={state} />}\n        ></Route>\n        {/* <Route\n          path=\"/screen\"\n          render={(props: {}) => <ScreenShareAgent {...props} />}\n        ></Route> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}